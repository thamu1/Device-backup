302115254
302115254

service account json = /mapr/JMAPRCLUP01.CLASSIC.PCHAD.COM/restricted/bigdata/prod/keystores/gcp/prod-ga4-wom-rpt/svc-prod-ga4-wom-rpt-c5c06cb656fd.json

https://medium.com/@tmmylo1021/extract-google-analytics-data-with-python-221626ed8975
https://medium.com/@tmmylo1021/extract-google-analytics-data-with-python-221626ed8975
https://developers.google.com/analytics/devguides/reporting/core/v4/rest/v4/reports/batchGet
https://developers.google.com/analytics/devguides/reporting/data/v1/quickstart-client-libraries#python
https://developers.google.com/analytics/devguides/reporting/data/v1/basics
export GA4_PROPERTY_ID=1234567890
request.json
{
  "dateRanges": [{ "startDate": "2020-09-01", "endDate": "2020-09-15" }],
  "dimensions": [{ "name": "country" }],
  "metrics": [{ "name": "activeUsers" }]
}

gcloud auth application-default login \
    --scopes=https://www.googleapis.com/auth/analytics.readonly \
    --client-id-file=[PATH/TO/credentials.json]


      curl -X POST \
  -H "Authorization: Bearer "$(gcloud auth application-default print-access-token) \
  -H "Content-Type: application/json; charset=utf-8" \
  https://analyticsdata.googleapis.com/v1beta/properties/$GA4_PROPERTY_ID:runReport -d @request.json

# Import Modules
import pandas as pd
from collections import defaultdict

# Authenticate & Build Service
analytics = ga_auth(scopes)

# Set Request Parameters
property_id = 'properties/306503726'
dimensions = ['sessionSourceMedium']
metrics = ['sessions', 'screenPageViews']

# Build Request Body
request = {
  "requests": [
    {
      "dateRanges": [
        {
          "startDate": "2022-03-01",
          "endDate": "2022-03-31"
        }
      ],
      "dimensions": [{'name': name} for name in dimensions],
      "metrics": [{'name': name} for name in metrics],
      "limit": 100000
    }
  ]
}

# Make Request
response = analytics.properties().batchRunReports(property=property_id, body=request).execute()

# Parse Request
report_data = defaultdict(list)

for report in response.get('reports', []):
    rows = report.get('rows', [])
    for row in rows:
        for i, key in enumerate(dimensions):
            report_data[key].append(row.get('dimensionValues', [])[i]['value'])  # Get dimensions
        for i, key in enumerate(metrics):
            report_data[key].append(row.get('metricValues', [])[i]['value'])  # Get metrics

df = pd.DataFrame(report_data)

https://www.shortautomaton.com/using-python-to-pull-google-analytics-4-ga4-api-reports/


https://analytics.google.com/analytics/web/#/a62457155p331273219/admin

https://developers.google.com/analytics/devguides/reporting/core/v4/samples#python


step by setp guide:
	https://www.lupagedigital.com/blog/google-analytics-api-python/
	
================================================================================

"Google Analytics Data API has not been used in project 361175665670 before or it is disabled.




1. https://developers.google.com/analytics/devguides/reporting/data/v1/rest/v1beta/properties/runReport


=============================================================================================================



Batch report results:
reports {
  dimension_headers {
    name: "country"
  }
  dimension_headers {
    name: "region"
  }
  dimension_headers {
    name: "city"
  }
  metric_headers {
    name: "activeUsers"
    type_: TYPE_INTEGER
  }
  metadata {
    currency_code: "USD"
    time_zone: "America/New_York"
  }
  kind: "analyticsData#runReport"
}
reports {
  dimension_headers {
    name: "browser"
  }
  metric_headers {
    name: "activeUsers"
    type_: TYPE_INTEGER
  }
  metadata {
    currency_code: "USD"
    time_zone: "America/New_York"
  }
  kind: "analyticsData#runReport"
}
kind: "analyticsData#batchRunReports"










